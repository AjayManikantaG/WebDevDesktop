{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Desktop/Web_Development/Projects/React_Projects/corona-tracker/src/components/Chart/Chart.jsx\";\n\n/** @format */\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchApi();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      label: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/mymac/Desktop/Web_Development/Projects/React_Projects/corona-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchApi","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","value","recovered","legend","display","title","text","container"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,YAAY,EAAC,MAAMR,cAAc,EAArB,EAAZ;AACD,KAFD;;AAGAS,IAAAA,QAAQ;AACT,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,SAAS,GAAGH,SAAS,CAACI,MAAV,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACCd,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OALO;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAkBd,IAlBJ;AAoBF,QAAMG,QAAQ,GAAGjB,IAAI,CAACW,SAAL,gBACb,oBAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADH;AAEJF,MAAAA,QAAQ,EAAE,CAAC;AACTE,QAAAA,KAAK,EAAE,QADE;AAETI,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAFR;AAGThB,QAAAA,IAAI,EAAE,CAACA,IAAI,CAACW,SAAL,CAAeO,KAAhB,EAAuBlB,IAAI,CAACmB,SAAL,CAAeD,KAAtC,EAA6ClB,IAAI,CAACe,MAAL,CAAYG,KAAzD;AAHG,OAAD;AAFN,KADN;AAUA,IAAA,OAAO,EAAE;AACPE,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADD;AAEPC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAG,oBAAmBtB,OAAQ;AAAlD;AAFA,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,GAgBb,IAhBJ;AAkBE,sBAAQ;AAAK,IAAA,SAAS,EAAEH,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACLvB,OAAO,GAAGgB,QAAH,GAAcZ,SADhB,CAAR;AAGD,CAnDD;;AAqDA,eAAeN,KAAf","sourcesContent":["/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchApi();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [{\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n        }, {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n        }],\n      }}\n    />\n  ) : null;\n\nconst barChart = data.confirmed \n? ( <Bar \n    data={{\n      label: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [data.confirmed.value, data.recovered.value, data.deaths.value]\n      }],\n      \n    }}\n    options={{\n      legend: {display: false},\n      title: {display: true, text: `Current state in ${country}`}\n    }}\n  />\n) : null\n\n  return (<div className={styles.container}>\n    {country ? barChart : lineChart} \n  </div>);\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}