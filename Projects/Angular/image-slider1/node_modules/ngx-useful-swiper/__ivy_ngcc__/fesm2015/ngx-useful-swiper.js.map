{"version":3,"file":"ngx-useful-swiper.js","sources":["ng:/ngx-useful-swiper/lib/swiper/swiper.component.ts","ng:/ngx-useful-swiper/lib/ngx-useful-swiper.module.ts","ng:/ngx-useful-swiper/public-api.ts","ng:/ngx-useful-swiper/ngx-useful-swiper.ts"],"names":[],"mappings":";;;;;;;;;;IAmBa,eAAe,GAA5B,MAAa,eAAe;AAAG,IAc7B,YACU,UAAsB,EACtB,iBAAoC;AAC7C,QAFS,eAAU,GAAV,UAAU,CAAY;AAAC,QACvB,sBAAiB,GAAjB,iBAAiB,CAAmB;AAChD,QAPU,eAAU,GAAG,CAAC,CAAC;AACzB,QAAU,gBAAW,GAAG,KAAK,CAAC;AAC9B,QAAU,qBAAgB,GAAG,IAAI,CAAC;AAClC,KAIM;AACN,IAfuB,IAAI,UAAU,CAAC,KAAc;AACpD,QAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,KAAK,CAAC;AAC7D,KAAG;AACH,IAaE,eAAe;AACjB,QAAI,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAC/B,YAAM,IAAI,CAAC,KAAK,EAAE,CAAC;AACnB,SAAK;AACL,KAAG;AACH,IACE,KAAK;AACP,QAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB;AACM,YAAA,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,EAAE;AACvD,gBAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAC9D,iBAAiB,CAClB,CAAC;AACV,gBAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC;AAC/D,gBAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CACtB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,EAC3D,IAAI,CAAC,MAAM,CACZ,CAAC;AACV,gBAAQ,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;AAC/C,aAAO;AACP,YACM,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACpC,SAAK;AACL,KAAG;AACH,IACE,kBAAkB;AACpB,QAAI,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAC/B,YAAM,IAAI,CAAC,KAAK,EAAE,CAAC;AACnB,SAAK;AACL,QACI,IACE,IAAI,CAAC,aAAa;AACxB,YAAM,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,aAAa,CAAC,iBAAiB,EACxD;AACN,YAAM,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC;AAC7D,YAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AAC3B,SAAK;AACL,KAAG;AACH,IACE,WAAW;AACb,QAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACpC,KAAG;AACH;;;;;;;;;sKAAC;AACD;AAAyC,YA/CjB,UAAU;AAChC,YAA6B,iBAAiB;AAC9C;AAfS;AAAa,IAArB,KAAK,EAAE;AAAE;AACI,+CADiB;AACV;AAAa,IAAjC,KAAK,CAAC,YAAY,CAAC;AAAE;AAChB;AAA+C,iDACpD;AALU,eAAe,oBAP3B,SAAS,CAAC,fAOP,kCAeoB,UAAU;AAClC,QAA+B,iBAAiB;OArB9C,QAAQ,EAAE,jBAsBV,GAjBW,eAAe,CA6D3B;AACA;GAnEmB,UAClB,bAkEA,ICxEW,qBAAqB,GAAlC,MAAa,qBAAqB;AAAG,CAAA,CAAA;AAAxB,qBAAqB,oBALjC,QAAQ,CAAC,UACR,YAAY,EAAE,CAAC;+BDUuB,UAEtC,eAAe,EAAE,uBAAuB,CAAC,MAAM,yFAChD,CAAC,/KCb8B,CAAC,UAC/B,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,OAAO,EAAE,CAAC,eAAe,CAAC,MAC3B,CAAC,IACW,qBAAqB,CAAG;;;;;;;;;;;;;;;;;;;;;;;;0BACrC;AAAC;ACVD;AACA;AACA,GAAG;AACH;ACHA;AACA;AACA,GAAG;AACH;AACA;AACqB","sourcesContent":["import {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport Swiper, { SwiperOptions } from 'swiper';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'swiper',\r\n  templateUrl: './swiper.component.html',\r\n  styleUrls: ['./swiper.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SwiperComponent implements AfterViewChecked, AfterViewInit, OnDestroy {\r\n  // add all the options as optional settings and use them to create an options object\r\n  @Input() config: SwiperOptions;\r\n  @Input('initialize') set initialize(value: boolean) {\r\n    this.shouldInitialize = this.initialized ? false : value;\r\n  }\r\n\r\n  swiper: Swiper;\r\n\r\n  private swiperWrapper: any;\r\n  private slideCount = 0;\r\n  private initialized = false;\r\n  private shouldInitialize = true;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (this.shouldInitialize) {\r\n      this.setup();\r\n    }\r\n  }\r\n\r\n  setup() {\r\n    if (!this.swiper) {\r\n      // if rendered on server querySelector is undefined\r\n      if (this.elementRef.nativeElement.querySelector) {\r\n        this.swiperWrapper = this.elementRef.nativeElement.querySelector(\r\n          '.swiper-wrapper'\r\n        );\r\n        this.slideCount = this.swiperWrapper.childElementCount;\r\n        this.swiper = new Swiper(\r\n          this.elementRef.nativeElement.querySelector('swiper > div'),\r\n          this.config\r\n        );\r\n        this.changeDetectorRef.detectChanges();\r\n      }\r\n\r\n      this.shouldInitialize = false;\r\n    }\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.shouldInitialize) {\r\n      this.setup();\r\n    }\r\n\r\n    if (\r\n      this.swiperWrapper &&\r\n      this.slideCount !== this.swiperWrapper.childElementCount\r\n    ) {\r\n      this.slideCount = this.swiperWrapper.childElementCount;\r\n      this.swiper.update();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.swiper.destroy(true, true);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SwiperComponent } from './swiper/swiper.component';\r\n\r\n@NgModule({\r\n  declarations: [SwiperComponent],\r\n  imports: [CommonModule],\r\n  exports: [SwiperComponent]\r\n})\r\nexport class NgxUsefulSwiperModule {}\r\n","/*\r\n * Public API Surface of ngx-useful-swiper\r\n */\r\n\r\nexport * from './lib/ngx-useful-swiper.module';\r\nexport * from './lib/swiper/swiper.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}