{"version":3,"sources":["ng://ngx-pinch-zoom/lib/properties.ts","ng://ngx-pinch-zoom/lib/touches.ts","ng://ngx-pinch-zoom/lib/ivypinch.ts","ng://ngx-pinch-zoom/lib/pinch-zoom.component.ts","ng://ngx-pinch-zoom/lib/pinch-zoom.module.ts"],"names":["defaultProperties","transitionDuration","doubleTap","doubleTapScale","limitZoom","autoZoomOut","disabled","overflow","zoomControlScale","backgroundColor","minScale","minPanScale","disableZoomControl","listeners","wheel","wheelZoomFactor","draggableImage","backwardCompatibilityProperties","transition-duration","double-tap","double-tap-scale","zoom-button","auto-zoom-out","limit-zoom","Touches","properties","_this","this","eventType","undefined","handlers","startX","startY","lastTap","doubleTapMinTimeout","tapMinTimeout","touchstartTime","i","isMousedown","touchListeners","touchstart","touchmove","touchend","mouseListeners","mousedown","mousemove","mouseup","otherListeners","resize","handleTouchstart","event","elementPosition","getElementPosition","Date","getTime","getTouchstartPosition","runHandler","handleTouchmove","touches","detectPan","detectPinch","handleTouchend","detectDoubleTap","detectTap","length","handleMousedown","getMousedownPosition","handleMousemove","detectLinearSwipe","swipeType","handleLinearSwipe","handleMouseup","handleWheel","handleResize","element","toggleEventListeners","prototype","destroy","action","listener","Object","assign","detectTouchScreen","handler","window","addEventListener","removeEventListener","document","getLinearSwipeType","eventName","response","currentTime","tapLength","clearTimeout","doubleTapTimeout","setTimeout","movementX","Math","abs","moveLeft","moveTop","getBoundingClientRect","clientX","left","clientY","top","index","prefixes","split","query","matchMedia","matches","mq","join","on","IvyPinchDefaultProperties","IvyPinch","scale","initialScale","moveX","moveY","initialMoveX","initialMoveY","moveXC","moveYC","draggingMode","distance","initialDistance","events","maxHtmlContentScale","maxScale","type","alignImage","updateInitialValues","handlePan","disablePan","preventDefault","_a","getClientPosition","limitPan","limitPanY","limitPanX","centeringImage","transformElement","handleDoubleTap","toggleZoom","handlePinch","getDistance","moveLeft0","moveLeft1","moveTop0","moveTop1","handleLimitZoom","zoomFactor","deltaY","newScale","xCenter","yCenter","setZoom","center","_event","setAutoHeight","elementTarget","querySelector","tagName","parentElement","pollLimitZoom","autoHeight","setBasicStyles","imageWidth","getImageWidth","imageHeight","getImageHeight","enlargedImageWidth","enlargedImageHeight","moveXRatio","moveYRatio","newImageWidth","newImageHeight","getLimitZoom","img","getElementsByTagName","naturalWidth","offsetWidth","imgHeight","scaledImgHeight","parentHeight","offsetHeight","elementHeight","imgOffsetTop","imgWidth","scaledImgWidth","parentWidth","elementWidth","imgOffsetLeft","style","display","alignItems","justifyContent","transformOrigin","setImageSize","setDraggableImage","removeBasicStyles","removeImageSize","removeDraggableImage","imgElement","getImageElement","draggable","maxWidth","maxHeight","sizeRatio","getAttribute","resetScale","sqrt","pow","pageX","pageY","duration","transition","transform","Number","isTouchScreen","getMatchMedia","isDragging","poll","setInterval","clearInterval","changedTouches","visibleAreaWidth","visibleAreaHeight","scalingPercent","PinchZoomComponent","elementRef","applyOptionsDefault","defineProperty","_properties","value","pinchZoom","ngOnInit","initPinchZoom","ngOnChanges","changes","changedOptions","getProperties","renameProperties","ngOnDestroy","nativeElement","prop","currentValue","options","defaultOptions","isControl","isDisabled","Component","args","selector","exportAs","template","ElementRef","Input","HostBinding","PinchZoomModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap","entryComponents"],"mappings":"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","sourcesContent":["export const defaultProperties = {\n    transitionDuration: 200,\n    doubleTap: true,\n    doubleTapScale: 2,\n    limitZoom: \"original image size\",\n    autoZoomOut: false,\n    disabled: false,\n    overflow: \"hidden\",\n    zoomControlScale: 1,\n    backgroundColor: \"rgba(0,0,0,0.85)\",\n    minScale: 0,\n    minPanScale: 1.0001,\n    disableZoomControl: \"auto\",\n    listeners: \"mouse and touch\",\n    wheel: true,\n    wheelZoomFactor: 0.2,\n    draggableImage: false\n}\n\nexport const backwardCompatibilityProperties = {\n    \"transition-duration\": \"transitionDuration\",\n    \"double-tap\": \"doubleTap\",\n    \"double-tap-scale\": \"doubleTapScale\",\n    \"zoom-button\": \"zoomButton\",\n    \"auto-zoom-out\": \"autoZoomOut\",\n    \"limit-zoom\": \"limitZoom\"\n}","export interface Properties {\r\n    element: HTMLElement;\r\n    listeners?: 'auto' | 'mouse and touch';\r\n    resize?: boolean;\r\n}\r\n\r\nexport type EventType = undefined | 'touchend' | 'pan' | 'pinch' | 'horizontal-swipe' | 'vertical-swipe' | 'tap' | 'longtap';\r\nexport type TouchHandler = 'handleTouchstart' | 'handleTouchmove' | 'handleTouchend';\r\nexport type MouseHandler = 'handleMousedown' | 'handleMousemove' | 'handleMouseup';\r\n\r\nexport class Touches {\r\n    properties: Properties;\r\n    element: HTMLElement;\r\n    elementPosition: ClientRect;\r\n    eventType: EventType = undefined;\r\n    handlers: any = {};\r\n    startX = 0;\r\n    startY = 0;\r\n    lastTap = 0;\r\n    doubleTapTimeout: any;\r\n    doubleTapMinTimeout = 300;\r\n    tapMinTimeout = 200;\r\n    touchstartTime = 0;\r\n    i: number = 0;\r\n    isMousedown = false;\r\n\r\n    touchListeners: any = {\r\n        \"touchstart\": \"handleTouchstart\",\r\n        \"touchmove\": \"handleTouchmove\",\r\n        \"touchend\": \"handleTouchend\"\r\n    }\r\n    mouseListeners: any = {\r\n        \"mousedown\": \"handleMousedown\",\r\n        \"mousemove\": \"handleMousemove\",\r\n        \"mouseup\": \"handleMouseup\",\r\n        \"wheel\": \"handleWheel\"\r\n    }\r\n    otherListeners: any = {\r\n        \"resize\": \"handleResize\"\r\n    }\r\n\r\n    constructor(properties: Properties) {\r\n        this.properties = properties;\r\n        this.element = this.properties.element;\r\n        this.elementPosition = this.getElementPosition();\r\n\r\n        this.toggleEventListeners('addEventListener');\r\n    }\r\n\r\n    destroy() {\r\n        this.toggleEventListeners('removeEventListener');\r\n    }\r\n\r\n    toggleEventListeners(action: 'addEventListener' | 'removeEventListener') {\r\n        let listeners;\r\n\r\n        if (this.properties.listeners === 'mouse and touch') {\r\n            listeners = Object.assign(this.touchListeners, this.mouseListeners);\r\n        } else {\r\n            listeners = this.detectTouchScreen() ? this.touchListeners : this.mouseListeners;\r\n        }\r\n\r\n        if (this.properties.resize) {\r\n            listeners = Object.assign(listeners, this.otherListeners);\r\n        }\r\n\r\n        for (var listener in listeners) {\r\n            const handler: MouseHandler = listeners[listener];\r\n\r\n            // Window\r\n            if (listener === \"resize\") {\r\n                if (action === 'addEventListener') {\r\n                    window.addEventListener(listener, this[handler], false);\r\n                }\r\n                if (action === 'removeEventListener') {\r\n                    window.removeEventListener(listener, this[handler], false);\r\n                }\r\n            // Document\r\n            } else if (listener === 'mouseup' || listener === \"mousemove\") {\r\n                if (action === 'addEventListener') {\r\n                    document.addEventListener(listener, this[handler], false);\r\n                }\r\n                if (action === 'removeEventListener') {\r\n                    document.removeEventListener(listener, this[handler], false);\r\n                }\r\n            // Element\r\n            } else {\r\n                if (action === 'addEventListener') {\r\n                    this.element.addEventListener(listener, this[handler], false);\r\n                }\r\n                if (action === 'removeEventListener') {\r\n                    this.element.removeEventListener(listener, this[handler], false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Listeners\r\n     */\r\n\r\n    /* Touchstart */\r\n\r\n    handleTouchstart = (event: any) => {\r\n        this.elementPosition = this.getElementPosition();\r\n        this.touchstartTime = new Date().getTime();\r\n\r\n        if (this.eventType === undefined) {\r\n            this.getTouchstartPosition(event);\r\n        }\r\n\r\n        this.runHandler(\"touchstart\", event);\r\n    }\r\n\r\n\r\n    /* Touchmove */\r\n\r\n    handleTouchmove = (event: any) => {\r\n        const touches = event.touches;\r\n\r\n        // Pan\r\n        if (this.detectPan(touches)) {\r\n            this.runHandler(\"pan\", event);\r\n        }\r\n\r\n        // Pinch\r\n        if (this.detectPinch(event)) {\r\n            this.runHandler(\"pinch\", event);\r\n        }\r\n    }\r\n\r\n    handleLinearSwipe(event: any) {\r\n        //event.preventDefault();\r\n\r\n        this.i++;\r\n\r\n        if (this.i > 3) {\r\n            this.eventType = this.getLinearSwipeType(event);\r\n        }\r\n\r\n        if (this.eventType === 'horizontal-swipe') {\r\n            this.runHandler('horizontal-swipe', event);\r\n        }\r\n\r\n        if (this.eventType === 'vertical-swipe') {\r\n            this.runHandler('vertical-swipe', event);\r\n        }\r\n    }\r\n\r\n\r\n    /* Touchend */\r\n\r\n    handleTouchend = (event: any) => {\r\n        const touches = event.touches;\r\n\r\n        // Double Tap\r\n        if (this.detectDoubleTap()) {\r\n            this.runHandler(\"double-tap\", event);\r\n        }\r\n\r\n        // Tap\r\n        this.detectTap();\r\n\r\n        this.runHandler(\"touchend\", event);\r\n        this.eventType = 'touchend';\r\n\r\n        if (touches && touches.length === 0) {\r\n            this.eventType = undefined;\r\n            this.i = 0;\r\n        }\r\n    }\r\n\r\n\r\n    /* Mousedown */\r\n\r\n    handleMousedown = (event: any) => {\r\n        this.isMousedown = true;\r\n        this.elementPosition = this.getElementPosition();\r\n        this.touchstartTime = new Date().getTime();\r\n\r\n        if (this.eventType === undefined) {\r\n            this.getMousedownPosition(event);\r\n        }\r\n\r\n        this.runHandler(\"mousedown\", event);\r\n    }\r\n\r\n\r\n    /* Mousemove */\r\n\r\n    handleMousemove = (event: any) => {\r\n        //event.preventDefault();\r\n        \r\n        if (!this.isMousedown) {\r\n            return;\r\n        }\r\n\r\n        // Pan\r\n        this.runHandler(\"pan\", event);\r\n\r\n        // Linear swipe\r\n        switch (this.detectLinearSwipe(event)) {\r\n            case \"horizontal-swipe\":\r\n                event.swipeType = \"horizontal-swipe\";\r\n                this.runHandler(\"horizontal-swipe\", event);\r\n                break;\r\n            case \"vertical-swipe\":\r\n                event.swipeType = \"vertical-swipe\";\r\n                this.runHandler(\"vertical-swipe\", event);\r\n                break;\r\n        }\r\n\r\n        // Linear swipe\r\n        if (this.detectLinearSwipe(event) ||\r\n            this.eventType === 'horizontal-swipe' ||\r\n            this.eventType === 'vertical-swipe') {\r\n\r\n            this.handleLinearSwipe(event);\r\n        }\r\n    }\r\n\r\n\r\n    /* Mouseup */\r\n\r\n    handleMouseup = (event: any) => {\r\n\r\n        // Tap\r\n        this.detectTap();\r\n\r\n        this.isMousedown = false;\r\n        this.runHandler(\"mouseup\", event);\r\n        this.eventType = undefined;\r\n        this.i = 0;\r\n    }\r\n\r\n\r\n    /* Wheel */\r\n\r\n    handleWheel = (event: any) => {\r\n        this.runHandler(\"wheel\", event);\r\n    }\r\n\r\n    /* Resize */\r\n\r\n    handleResize = (event: any) => {\r\n        this.runHandler(\"resize\", event);\r\n    }\r\n\r\n    runHandler(eventName: any, response: any) {\r\n        if (this.handlers[eventName]) {\r\n            this.handlers[eventName](response);\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     * Detection\r\n     */\r\n\r\n    detectPan(touches: any) {\r\n        return touches.length === 1 && !this.eventType || this.eventType === 'pan';\r\n    }\r\n\r\n    detectDoubleTap() {\r\n        if (this.eventType != undefined) {\r\n            return;\r\n        }\r\n\r\n        const currentTime = new Date().getTime();\r\n        const tapLength = currentTime - this.lastTap;\r\n\r\n        clearTimeout(this.doubleTapTimeout);\r\n\r\n        if (tapLength < this.doubleTapMinTimeout && tapLength > 0) {\r\n            return true;\r\n        } else {\r\n            this.doubleTapTimeout = setTimeout(() => {\r\n                clearTimeout(this.doubleTapTimeout);\r\n            }, this.doubleTapMinTimeout);\r\n        }\r\n        this.lastTap = currentTime;\r\n    }\r\n\r\n    detectTap(): void {\r\n        if (this.eventType != undefined) {\r\n            return;\r\n        }\r\n\r\n        const currentTime = new Date().getTime();\r\n        const tapLength = currentTime - this.touchstartTime;\r\n\r\n        if (tapLength > 0) {\r\n            if (tapLength < this.tapMinTimeout) {\r\n                this.runHandler(\"tap\", event);\r\n            } else {\r\n                this.runHandler(\"longtap\", event);\r\n            }\r\n        }\r\n    }\r\n\r\n    detectPinch(event: any) {\r\n        const touches = event.touches;\r\n        return (touches.length === 2 && this.eventType === undefined) || this.eventType === 'pinch';\r\n    }\r\n\r\n    detectLinearSwipe(event: any) {\r\n        const touches = event.touches;\r\n\r\n        if (touches) {\r\n            if (touches.length === 1 && !this.eventType || this.eventType === 'horizontal-swipe' || this.eventType === 'vertical-swipe') {\r\n                return this.getLinearSwipeType(event);\r\n            }\r\n        } else {\r\n            if (!this.eventType || this.eventType === 'horizontal-swipe' || this.eventType === 'vertical-swipe') {\r\n                return this.getLinearSwipeType(event);\r\n            }\r\n        }\r\n    }\r\n\r\n    getLinearSwipeType(event: any) {\r\n        if (this.eventType !== 'horizontal-swipe' && this.eventType !== 'vertical-swipe') {\r\n            const movementX = Math.abs(this.moveLeft(0, event) - this.startX);\r\n            const movementY = Math.abs(this.moveTop(0, event) - this.startY);\r\n\r\n            if ((movementY * 3) > movementX) {\r\n                return 'vertical-swipe';\r\n            } else {\r\n                return 'horizontal-swipe';\r\n            }\r\n        } else {\r\n            return this.eventType;\r\n        }\r\n    }\r\n\r\n    getElementPosition() {\r\n        return this.element.getBoundingClientRect();\r\n    }\r\n\r\n    getTouchstartPosition(event: any) {\r\n        this.startX = event.touches[0].clientX - this.elementPosition.left;\r\n        this.startY = event.touches[0].clientY - this.elementPosition.top;\r\n    }\r\n\r\n    getMousedownPosition(event: any) {\r\n        this.startX = event.clientX - this.elementPosition.left;\r\n        this.startY = event.clientY - this.elementPosition.top;\r\n    }\r\n\r\n    moveLeft(index: any, event: any) {\r\n        const touches = event.touches;\r\n\r\n        if (touches) {\r\n            return touches[index].clientX - this.elementPosition.left;\r\n        } else {\r\n            return event.clientX - this.elementPosition.left;\r\n        }\r\n    }\r\n\r\n    moveTop(index: any, event: any) {\r\n        const touches = event.touches;\r\n\r\n        if (touches) {\r\n            return touches[index].clientY - this.elementPosition.top;\r\n        } else {\r\n            return event.clientY - this.elementPosition.top;\r\n        }\r\n    }\r\n\r\n    detectTouchScreen() {\r\n        var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\r\n        var mq = function(query: any) {\r\n            return window.matchMedia(query).matches;\r\n        }\r\n\r\n        if (('ontouchstart' in window)) {\r\n            return true;\r\n        }\r\n\r\n        // include the 'heartz' as a way to have a non matching MQ to help terminate the join\r\n        // https://git.io/vznFH\r\n        var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\r\n        return mq(query);\r\n    }\r\n\r\n\r\n    /* Public properties and methods */\r\n    on(event: EventType, handler: Function) {\r\n        if (event) {\r\n            this.handlers[event] = handler;\r\n        }\r\n    }\r\n}","import {Touches} from './touches';\n\nexport interface IvyPinchProperties {\n    element: string;\n    key ? : string;\n    doubleTap ? : boolean;\n    doubleTapScale ? : number;\n    zoomControlScale ? : number;\n    transitionDuration ? : number;\n    autoZoomOut ? : boolean;\n    limitZoom ? : number | \"original image size\";\n    disablePan ? : boolean;\n    limitPan ? : boolean;\n    minPanScale ? : number;\n    minScale ? : number;\n    eventHandler ? : any;\n    listeners ? : \"auto\" | \"mouse and touch\";\n    wheel ? : boolean;\n    autoHeight ? : boolean;\n    wheelZoomFactor ? : number;\n    draggableImage ? : boolean;\n}\n\nexport const IvyPinchDefaultProperties = {\n    doubleTap: true,\n    doubleTapScale: 2,\n    transitionDuration: 200,\n    limitZoom: \"original image size\",\n    minScale: 0,\n    minPanScale: 1.0001,\n    wheel: true,\n    wheelZoomFactor: 0.2,\n    draggableImage: true,\n    listeners: 'auto',\n    zoomControlScale: 2\n}\n\nexport class IvyPinch {\n    properties: IvyPinchProperties;\n    touches: any;\n    element: any;\n    elementTarget: any;\n    parentElement: any;\n    i: number = 0;\n    public scale: number = 1;\n    initialScale: number = 1;\n    elementPosition: any;\n    eventType: any;\n    startX: number = 0;\n    startY: number = 0;\n    moveX: number = 0;\n    moveY: number = 0;\n    initialMoveX: number = 0;\n    initialMoveY: number = 0;\n    moveXC: number = 0;\n    moveYC: number = 0;\n    lastTap: number = 0;\n    draggingMode: boolean = false;\n    distance: number = 0;\n    doubleTapTimeout: number = 0;\n    initialDistance: number = 0;\n    events: any = {};\n    maxHtmlContentScale: number = 3;\n    maxScale: number = 3;\n\n    constructor(properties: any) {\n        this.element = properties.element;\n        this.elementTarget = this.element.querySelector('*').tagName;\n        this.parentElement = this.element.parentElement;\n        this.properties = Object.assign({}, IvyPinchDefaultProperties, properties);\n        this.pollLimitZoom();\n\n        this.touches = new Touches({\n            element: properties.element,\n            listeners: this.properties.listeners,\n            resize: this.properties.autoHeight\n        });\n\n\n        /* Init */\n        this.setBasicStyles();\n\n        /*\n         * Listeners\n         */\n\n        this.touches.on('touchstart', this.handleTouchstart);\n        this.touches.on('touchend', this.handleTouchend);\n        this.touches.on('mousedown', this.handleTouchstart);\n        this.touches.on('mouseup', this.handleTouchend);\n        this.touches.on('pan', this.handlePan);\n        this.touches.on('mousemove', this.handlePan);\n        this.touches.on('pinch', this.handlePinch);\n\n        if (this.properties.wheel) {\n            this.touches.on('wheel', this.handleWheel);\n        }\n\n        if (this.properties.doubleTap) {\n            this.touches.on('double-tap', this.handleDoubleTap);\n        }\n\n        if (this.properties.autoHeight) {\n            this.touches.on('resize', this.handleResize);\n        }\n    }\n\n\n    /* Touchstart */\n\n    handleTouchstart = (event: any) => {\n        this.getElementPosition();\n\n        if (this.eventType === undefined) {\n            this.getTouchstartPosition(event);\n        }\n    }\n\n\n    /* Touchend */\n\n    handleTouchend = (event: any) => {\n\n        /* touchend */\n        if (event.type === \"touchend\") {\n            this.i = 0;\n            this.draggingMode = false;\n            const touches = event.touches;\n\n            // Min scale\n            if (this.scale < 1) {\n                this.scale = 1;\n            }\n\n            // Auto Zoom Out\n            if (this.properties.autoZoomOut && this.eventType === 'pinch') {\n                this.scale = 1;\n            }\n\n            // Align image\n            if (this.eventType === 'pinch' || \n                this.eventType === 'pan' && this.scale > this.properties.minPanScale) {\n\n                this.alignImage();\n            }\n\n            // Update initial values\n            if (this.eventType === 'pinch' ||\n                this.eventType === 'pan' ||\n                this.eventType === 'horizontal-swipe' ||\n                this.eventType === 'vertical-swipe') {\n\n                this.updateInitialValues();\n            }\n\n            this.eventType = 'touchend';\n\n            if (touches && touches.length === 0) {\n                this.eventType = undefined;\n            }\n        }\n\n        /* mouseup */\n        if (event.type === \"mouseup\") {\n            this.draggingMode = false;\n            this.updateInitialValues();\n            this.eventType = undefined;\n        }\n    }\n\n\n    /*\n     * Handlers\n     */\n\n    handlePan = (event: any) => {\n        if (this.scale < this.properties.minPanScale || this.properties.disablePan) {\n            return;\n        }\n\n        event.preventDefault();\n        const {\n            clientX,\n            clientY\n        } = this.getClientPosition(event);\n\n        if (!this.eventType) {\n            this.startX = clientX - this.elementPosition.left;\n            this.startY = clientY - this.elementPosition.top;\n        }\n\n        this.eventType = 'pan';\n        this.moveX = this.initialMoveX + (this.moveLeft(event, 0) - this.startX);\n        this.moveY = this.initialMoveY + (this.moveTop(event, 0) - this.startY);\n\n        if (this.properties.limitPan) {\n            this.limitPanY();\n            this.limitPanX();\n        }\n\n        /* mousemove */\n        if (event.type === \"mousemove\" && this.scale > this.properties.minPanScale) {\n            this.centeringImage();\n        }\n\n        this.transformElement(0);\n    }\n\n    handleDoubleTap = (event: any) => {\n        this.toggleZoom(event);\n        return;\n    }\n\n    handlePinch = (event: any) => {\n        event.preventDefault();\n\n        if (this.eventType === undefined || this.eventType === 'pinch') {\n            const touches = event.touches;\n\n            if (!this.eventType) {\n                this.initialDistance = this.getDistance(touches);\n\n                const moveLeft0 = this.moveLeft(event, 0);\n                const moveLeft1 = this.moveLeft(event, 1);\n                const moveTop0 = this.moveTop(event, 0);\n                const moveTop1 = this.moveTop(event, 1);\n\n                this.moveXC = ((moveLeft0 + moveLeft1) / 2) - this.initialMoveX;\n                this.moveYC = ((moveTop0 + moveTop1) / 2) - this.initialMoveY;\n            }\n\n            this.eventType = 'pinch';\n            this.distance = this.getDistance(touches);\n            this.scale = this.initialScale * (this.distance / this.initialDistance);\n            this.moveX = this.initialMoveX - (((this.distance / this.initialDistance) * this.moveXC) - this.moveXC);\n            this.moveY = this.initialMoveY - (((this.distance / this.initialDistance) * this.moveYC) - this.moveYC);\n\n            this.handleLimitZoom();\n\n            if (this.properties.limitPan) {\n                this.limitPanY();\n                this.limitPanX();\n            }\n\n            this.transformElement(0);\n        }\n    }\n\n\n    handleWheel = (event: any) => {\n        event.preventDefault();\n\n        let wheelZoomFactor = this.properties.wheelZoomFactor || 0;\n        let zoomFactor = event.deltaY < 0 ? (wheelZoomFactor) : (- wheelZoomFactor);\n        let newScale = this.initialScale + zoomFactor;\n\n        /* Round value */\n        if (newScale < (1 + wheelZoomFactor)) {\n            newScale = 1;\n        } else if (newScale < this.maxScale && newScale > this.maxScale - wheelZoomFactor) {\n            newScale = this.maxScale;\n        }\n\n        if (newScale < 1 || newScale > this.maxScale) {\n            return;\n        }\n\n        if (newScale === this.scale) {\n            return;\n        }\n\n        this.getElementPosition();\n        this.scale = newScale;\n\n        /* Get cursor position over image */\n        let xCenter = (event.clientX - this.elementPosition.left) - this.initialMoveX;\n        let yCenter = (event.clientY - this.elementPosition.top) - this.initialMoveY;\n\n        this.setZoom({\n            scale: newScale,\n            center: [xCenter, yCenter]\n        });\n    }\n\n    handleResize = (_event: any) => {\n        this.setAutoHeight();\n    }\n\n    handleLimitZoom() {\n        const limitZoom = this.maxScale;\n        const minScale = this.properties.minScale || 0;\n\n        if (this.scale > limitZoom || this.scale <= minScale) {\n            const imageWidth = this.getImageWidth();\n            const imageHeight = this.getImageHeight();\n            const enlargedImageWidth = imageWidth * this.scale;\n            const enlargedImageHeight = imageHeight * this.scale;\n            const moveXRatio = this.moveX / (enlargedImageWidth - imageWidth);\n            const moveYRatio = this.moveY / (enlargedImageHeight - imageHeight);\n\n            if (this.scale > limitZoom) {\n                this.scale = limitZoom;\n            }\n\n            if (this.scale <= minScale) {\n                this.scale = minScale;\n            }\n\n            const newImageWidth = imageWidth * this.scale;\n            const newImageHeight = imageHeight * this.scale;\n\n            this.moveX = -Math.abs((moveXRatio * (newImageWidth - imageWidth)));\n            this.moveY = -Math.abs((-moveYRatio * (newImageHeight - imageHeight)));\n        }\n    }\n\n    getLimitZoom() {\n        if (this.properties.limitZoom === \"original image size\") {\n            if (this.elementTarget === \"IMG\") {\n                let img = this.element.getElementsByTagName(\"img\")[0];\n\n                if (img.naturalWidth && img.offsetWidth) {\n                    this.maxScale = img.naturalWidth / img.offsetWidth;\n                    return this.maxScale;\n                }\n            } else {\n                this.maxScale = this.maxHtmlContentScale;\n                return this.maxScale;\n            }\n        } else {\n            this.maxScale = this.properties.limitZoom || 0;\n            return this.maxScale;\n        }\n    }\n\n    moveLeft(event: any, index: number = 0) {\n        const clientX = this.getClientPosition(event, index).clientX;\n        return clientX - this.elementPosition.left;\n    }\n\n    moveTop(event: any, index: number = 0) {\n        const clientY = this.getClientPosition(event, index).clientY;\n        return clientY - this.elementPosition.top;\n    }\n\n\n    /*\n     * Detection\n     */\n\n    centeringImage() {\n        const img = this.element.getElementsByTagName(this.elementTarget)[0];\n        const initialMoveX = this.moveX;\n        const initialMoveY = this.moveY;\n\n        if (this.moveY > 0) {\n            this.moveY = 0;\n        }\n        if (this.moveX > 0) {\n            this.moveX = 0;\n        }\n\n        if (img) {\n            this.limitPanY();\n            this.limitPanX();\n        }\n        if (img && this.scale < 1) {\n            if (this.moveX < this.element.offsetWidth * (1 - this.scale)) {\n                this.moveX = this.element.offsetWidth * (1 - this.scale);\n            }\n        }\n\n        return initialMoveX !== this.moveX || initialMoveY !== this.moveY;\n    }\n\n    limitPanY() {\n        const imgHeight = this.getImageHeight();\n        const scaledImgHeight = imgHeight * this.scale;\n        const parentHeight = this.parentElement.offsetHeight;\n        const elementHeight = this.element.offsetHeight;\n\n        if (scaledImgHeight < parentHeight) {\n            this.moveY = (parentHeight - elementHeight * this.scale) / 2;\n        } else {\n            const imgOffsetTop = ((imgHeight - elementHeight) * this.scale) / 2;\n\n            if (this.moveY > imgOffsetTop) {\n                this.moveY = imgOffsetTop;\n            } else if ((scaledImgHeight + Math.abs(imgOffsetTop) - parentHeight) + this.moveY < 0) {\n                this.moveY = -(scaledImgHeight + Math.abs(imgOffsetTop) - parentHeight);\n            }\n        }\n    }\n\n    limitPanX() {\n        const imgWidth = this.getImageWidth();\n        const scaledImgWidth = imgWidth * this.scale;\n        const parentWidth = this.parentElement.offsetWidth;\n        const elementWidth = this.element.offsetWidth;\n\n        if (scaledImgWidth < parentWidth) {\n            this.moveX = (parentWidth - elementWidth * this.scale) / 2;\n        } else {\n            const imgOffsetLeft = ((imgWidth - elementWidth) * this.scale) / 2;\n\n            if (this.moveX > imgOffsetLeft) {\n                this.moveX = imgOffsetLeft;\n            } else if ((scaledImgWidth + Math.abs(imgOffsetLeft) - parentWidth) + this.moveX < 0) {\n                this.moveX = -(imgWidth * this.scale + Math.abs(imgOffsetLeft) - parentWidth);\n            }\n        }\n    }\n\n    setBasicStyles() {\n        this.element.style.display = 'flex';\n        this.element.style.alignItems = 'center';\n        this.element.style.justifyContent = 'center';\n        this.element.style.transformOrigin = '0 0';\n        this.setImageSize();\n        this.setDraggableImage();\n    }\n\n    removeBasicStyles() {\n        this.element.style.display = '';\n        this.element.style.alignItems = '';\n        this.element.style.justifyContent = '';\n        this.element.style.transformOrigin = '';\n        this.removeImageSize();\n        this.removeDraggableImage();\n    }\n\n    setDraggableImage() {\n        const imgElement = this.getImageElement();\n\n        if (imgElement) {\n            imgElement.draggable = this.properties.draggableImage;\n        }\n    }\n\n    removeDraggableImage() {\n        const imgElement = this.getImageElement();\n\n        if (imgElement) {\n            imgElement.draggable = true;\n        }\n    }\n\n    setImageSize() {\n        const imgElement = this.element.getElementsByTagName(this.elementTarget);\n\n        if (imgElement.length) {\n            imgElement[0].style.maxWidth = '100%';\n            imgElement[0].style.maxHeight = '100%';\n\n            this.setAutoHeight();\n        }\n    }\n\n    setAutoHeight() {\n        const imgElement = this.element.getElementsByTagName(this.elementTarget);\n\n        if (!this.properties.autoHeight || !imgElement.length) {\n            return;\n        }\n\n        const imgNaturalWidth = imgElement[0].getAttribute(\"width\");\n        const imgNaturalHeight = imgElement[0].getAttribute(\"height\");\n        const sizeRatio = imgNaturalWidth / imgNaturalHeight;\n        const parentWidth = this.parentElement.offsetWidth;\n\n        imgElement[0].style.maxHeight = parentWidth / sizeRatio + \"px\";\n    }\n\n    removeImageSize() {\n        const imgElement = this.element.getElementsByTagName(this.elementTarget);\n\n        if (imgElement.length) {\n            imgElement[0].style.maxWidth = '';\n            imgElement[0].style.maxHeight = '';\n        }\n    }\n\n    getElementPosition() {\n        this.elementPosition = this.element.parentElement.getBoundingClientRect();\n    }\n\n    getTouchstartPosition(event: any) {\n        const {\n            clientX,\n            clientY\n        } = this.getClientPosition(event);\n\n        this.startX = clientX - this.elementPosition.left;\n        this.startY = clientY - this.elementPosition.top;\n    }\n\n    getClientPosition(event: any, index: number = 0) {\n        let clientX;\n        let clientY;\n\n        if (event.type === \"touchstart\" || event.type === \"touchmove\") {\n            clientX = event.touches[index].clientX;\n            clientY = event.touches[index].clientY;\n        }\n        if (event.type === \"mousedown\" || event.type === \"mousemove\") {\n            clientX = event.clientX;\n            clientY = event.clientY;\n        }\n\n        return {\n            clientX,\n            clientY\n        };\n    }\n\n    resetScale() {\n        this.scale = 1;\n        this.moveX = 0;\n        this.moveY = 0;\n        this.updateInitialValues();\n        this.transformElement(this.properties.transitionDuration);\n    }\n\n    updateInitialValues() {\n        this.initialScale = this.scale;\n        this.initialMoveX = this.moveX;\n        this.initialMoveY = this.moveY;\n    }\n\n    getDistance(touches: any) {\n        return Math.sqrt(Math.pow(touches[0].pageX - touches[1].pageX, 2) + Math.pow(touches[0].pageY - touches[1].pageY, 2));\n    }\n\n    getImageHeight() {\n        const img = this.element.getElementsByTagName(this.elementTarget)[0];\n        return img.offsetHeight;\n    }\n\n    getImageWidth() {\n        const img = this.element.getElementsByTagName(this.elementTarget)[0];\n        return img.offsetWidth;\n    }\n\n    transformElement(duration: any) {\n        this.element.style.transition = \"all \" + duration + \"ms\";\n        this.element.style.transform = \"matrix(\" + Number(this.scale) + \", 0, 0, \" + Number(this.scale) + \", \" + Number(this.moveX) + \", \" + Number(this.moveY) + \")\";\n    }\n\n    isTouchScreen() {\n        const prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n\n        if (('ontouchstart' in window)) {\n            return true;\n        }\n\n        // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n        // https://git.io/vznFH\n        const query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n        return this.getMatchMedia(query);\n    }\n\n    getMatchMedia(query: any) {\n        return window.matchMedia(query).matches;\n    }\n\n    isDragging() {\n        if (this.properties.disablePan) {\n            return false;\n        }\n\n        const imgHeight = this.getImageHeight();\n        const imgWidth = this.getImageWidth();\n\n        if (this.scale > 1) {\n            return imgHeight * this.scale > this.parentElement.offsetHeight ||\n                imgWidth * this.scale > this.parentElement.offsetWidth;\n        }\n        if (this.scale === 1) {\n            return imgHeight > this.parentElement.offsetHeight ||\n                imgWidth > this.parentElement.offsetWidth;\n        }\n    }\n\n    pollLimitZoom() {\n        let poll = setInterval(() => {\n            if (this.getLimitZoom()) {\n                clearInterval(poll);\n            }\n        }, 10);\n    }\n\n    getImageElement() {\n        const imgElement = this.element.getElementsByTagName(this.elementTarget);\n\n        if (imgElement.length) {\n            return imgElement[0];\n        }\n    }\n\n    toggleZoom(event: any = false) {\n        if (this.initialScale === 1) {\n            if (event && event.changedTouches) {\n                if (this.properties.doubleTapScale === undefined) {\n                    return;\n                }\n\n                const changedTouches = event.changedTouches;\n                this.scale = this.initialScale * this.properties.doubleTapScale;\n                this.moveX = this.initialMoveX - (changedTouches[0].clientX - this.elementPosition.left) * (this.properties.doubleTapScale - 1);\n                this.moveY = this.initialMoveY - (changedTouches[0].clientY - this.elementPosition.top) * (this.properties.doubleTapScale - 1);\n            } else {\n                let zoomControlScale = this.properties.zoomControlScale || 0;\n                this.scale = this.initialScale * (zoomControlScale + 1);\n                this.moveX = this.initialMoveX - this.element.offsetWidth * (this.scale - 1) / 2;\n                this.moveY = this.initialMoveY - this.element.offsetHeight * (this.scale - 1) / 2;\n            }\n\n            this.centeringImage();\n            this.updateInitialValues();\n            this.transformElement(this.properties.transitionDuration);\n        } else {\n            this.resetScale();\n        }\n    }\n\n    setZoom(properties: {\n        scale: number,\n        center?: number[]\n    }) {\n        this.scale = properties.scale;\n\n        let xCenter;\n        let yCenter;\n        let visibleAreaWidth = this.element.offsetWidth;\n        let visibleAreaHeight = this.element.offsetHeight;\n        let scalingPercent = (visibleAreaWidth * this.scale) / (visibleAreaWidth * this.initialScale);\n\n        if (properties.center) {\n            xCenter = properties.center[0];\n            yCenter = properties.center[1];\n        } else {\n            xCenter = visibleAreaWidth / 2 - this.initialMoveX;\n            yCenter = visibleAreaHeight / 2 - this.initialMoveY;\n        }\n\n        this.moveX = this.initialMoveX - ((scalingPercent * xCenter) - xCenter);\n        this.moveY = this.initialMoveY - ((scalingPercent * yCenter) - yCenter);\n\n        this.centeringImage();\n        this.updateInitialValues();\n        this.transformElement(this.properties.transitionDuration);\n    }\n\n    alignImage() {\n        const isMoveChanged = this.centeringImage();\n\n        if (isMoveChanged) {\n            this.updateInitialValues();\n            this.transformElement(this.properties.transitionDuration);\n        }\n    }\n\n    destroy() {\n        this.removeBasicStyles();\n        this.touches.destroy();\n    }\n}","import {ChangeDetectorRef, Component, ElementRef, HostBinding, HostListener, Input, OnDestroy, SimpleChanges} from '@angular/core';\r\n\r\nimport {Properties} from './interfaces';\r\nimport {defaultProperties, backwardCompatibilityProperties} from './properties';\r\nimport {Touches} from './touches';\r\nimport {IvyPinch} from './ivypinch';\r\n\r\n@Component({\r\n\tselector: 'pinch-zoom, [pinch-zoom]',\r\n    exportAs: 'pinchZoom',\r\n    templateUrl: './pinch-zoom.component.html',\r\n    styleUrls: ['./pinch-zoom.component.sass']\r\n})\r\n\r\nexport class PinchZoomComponent implements OnDestroy {\r\n\r\n    pinchZoom: any;\r\n    _properties: Properties;\r\n\r\n    @Input('properties') set properties(value: Properties) {\r\n        if (value) {\r\n            this._properties = value;\r\n        }\r\n    }\r\n    get properties() {\r\n        return this._properties;\r\n    }\r\n\r\n    @Input('transition-duration') transitionDuration = 200;\r\n    @Input('double-tap') doubleTap = true;\r\n    @Input('double-tap-scale') doubleTapScale = 2;\r\n    @Input('auto-zoom-out') autoZoomOut = false;\r\n    @Input('limit-zoom') limitZoom: number | \"original image size\";\r\n    @Input('disabled') disabled: boolean = false;\r\n    @Input() disablePan: boolean;\r\n    @Input() overflow: \"hidden\" | \"visible\";\r\n    @Input() zoomControlScale: number = 1;\r\n    @Input() disableZoomControl: \"disable\" | \"never\" | \"auto\";\r\n    @Input() backgroundColor: string = \"rgba(0,0,0,0.85)\";\r\n    @Input() limitPan: boolean;\r\n    @Input() minPanScale: number = 1.0001;\r\n    @Input() minScale: number = 0;\r\n    @Input() listeners: 'auto' | 'mouse and touch' = 'mouse and touch';\r\n    @Input() wheel: boolean = true;\r\n    @Input() autoHeight: boolean = false;\r\n    @Input() wheelZoomFactor: number = 0.2;\r\n    @Input() draggableImage: boolean = false;\r\n\r\n    @HostBinding('style.overflow')\r\n    get hostOverflow() {\r\n        return this.properties['overflow'];\r\n    }\r\n    @HostBinding('style.background-color')\r\n    get hostBackgroundColor() {\r\n        return this.properties['backgroundColor'];\r\n    }\r\n\r\n    get isTouchScreen() {\r\n        var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\r\n        var mq = function(query) {\r\n            return window.matchMedia(query).matches;\r\n        }\r\n\r\n        if (('ontouchstart' in window)) {\r\n            return true;\r\n        }\r\n\r\n        // include the 'heartz' as a way to have a non matching MQ to help terminate the join\r\n        // https://git.io/vznFH\r\n        var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\r\n        return mq(query);\r\n    }\r\n\r\n    get isDragging() {\r\n        return this.pinchZoom.isDragging();\r\n    }\r\n\r\n    get isDisabled() {\r\n        return this.properties['disabled'];\r\n    }\r\n\r\n    get scale() {\r\n        return this.pinchZoom.scale;\r\n    }\r\n\r\n    get isZoomedIn() {\r\n        return this.scale > 1;\r\n    }\r\n\r\n    constructor(private elementRef: ElementRef) {\r\n        this.applyOptionsDefault(defaultProperties, {});\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.initPinchZoom();\r\n        \r\n        /* Calls the method until the image size is available */\r\n        this.pollLimitZoom();\r\n    }\r\n\r\n    ngOnChanges(changes) {\r\n        let changedOptions = this.getProperties(changes);\r\n        changedOptions = this.renameProperties(changedOptions);\r\n\r\n        this.applyOptionsDefault(defaultProperties, changedOptions);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    initPinchZoom() {\r\n        if (this.properties['disabled']) {\r\n            return;\r\n        }\r\n\r\n        this.properties['element'] = this.elementRef.nativeElement.querySelector('.pinch-zoom-content');\r\n        this.pinchZoom = new IvyPinch(this.properties);\r\n    }\r\n\r\n    getProperties(changes){\r\n        let properties = {};\r\n\r\n        for (var prop in changes) {\r\n            if (prop !== 'properties'){\r\n                properties[prop] = changes[prop].currentValue;\r\n            }\r\n            if (prop === 'properties'){\r\n                properties = changes[prop].currentValue;\r\n            }\r\n        }\r\n        return properties;\r\n    }\r\n\r\n    renameProperties(options: Properties) {\r\n        for (var prop in options) {\r\n            if (backwardCompatibilityProperties[prop]) {\r\n                options[backwardCompatibilityProperties[prop]] = options[prop];\r\n                delete options[prop];\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    applyOptionsDefault(defaultOptions, options): void {\r\n        this.properties = Object.assign({}, defaultOptions, options);\r\n    }\r\n\r\n    toggleZoom() {\r\n        this.pinchZoom.toggleZoom();\r\n    }\r\n\r\n    isControl() {\r\n        if (this.isDisabled) {\r\n            return false;\r\n        }\r\n\r\n        if (this.properties['disableZoomControl'] === \"disable\") {\r\n            return false;\r\n        }\r\n\r\n        if (this.isTouchScreen && this.properties['disableZoomControl'] === \"auto\") {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    pollLimitZoom() {\r\n        this.pinchZoom.pollLimitZoom();\r\n    }\r\n\r\n    destroy() {\r\n        this.pinchZoom.destroy();\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PinchZoomComponent } from './pinch-zoom.component';\n\n@NgModule({\n    declarations: [\n        PinchZoomComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        PinchZoomComponent\n    ],\n    providers: [\n\n    ],\n    bootstrap: [\n        \n    ],\n    entryComponents: [\n        PinchZoomComponent\n    ]\n})\nexport class PinchZoomModule { }\n"]}