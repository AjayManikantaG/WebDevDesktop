import { NgZone, ElementRef, AfterViewInit, OnDestroy, DoCheck, OnChanges, EventEmitter, SimpleChanges, KeyValueDiffers } from '@angular/core';
import { SwiperConfigInterface } from './swiper.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class SwiperDirective implements AfterViewInit, OnDestroy, DoCheck, OnChanges {
    private platformId;
    private zone;
    private elementRef;
    private differs;
    private defaults;
    private instance;
    private initialIndex;
    private configDiff;
    set index(index: number);
    disabled: boolean;
    performance: boolean;
    config?: SwiperConfigInterface;
    indexChange: EventEmitter<number>;
    S_INIT: EventEmitter<any>;
    S_BEFOREDESTROY: EventEmitter<any>;
    S_SCROLL: EventEmitter<any>;
    S_PROGRESS: EventEmitter<any>;
    S_KEYPRESS: EventEmitter<any>;
    S_RESIZE: EventEmitter<any>;
    S_BREAKPOINT: EventEmitter<any>;
    S_ZOOMCHANGE: EventEmitter<any>;
    S_AFTERRESIZE: EventEmitter<any>;
    S_BEFORERESIZE: EventEmitter<any>;
    S_LOOPFIX: EventEmitter<any>;
    S_BEFORELOOPFIX: EventEmitter<any>;
    S_SLIDERMOVE: EventEmitter<any>;
    S_SLIDECHANGE: EventEmitter<any>;
    S_SETTRANSLATE: EventEmitter<any>;
    S_SETTRANSITION: EventEmitter<any>;
    S_FROMEDGE: EventEmitter<any>;
    S_REACHEND: EventEmitter<any>;
    S_REACHBEGINNING: EventEmitter<any>;
    S_AUTOPLAY: EventEmitter<any>;
    S_AUTOPLAYSTART: EventEmitter<any>;
    S_AUTOPLAYSTOP: EventEmitter<any>;
    S_IMAGESREADY: EventEmitter<any>;
    S_LAZYIMAGELOAD: EventEmitter<any>;
    S_LAZYIMAGEREADY: EventEmitter<any>;
    S_SCROLLDRAGEND: EventEmitter<any>;
    S_SCROLLDRAGMOVE: EventEmitter<any>;
    S_SCROLLDRAGSTART: EventEmitter<any>;
    S_NAVIGATIONHIDE: EventEmitter<any>;
    S_NAVIGATIONSHOW: EventEmitter<any>;
    S_PAGINATIONRENDER: EventEmitter<any>;
    S_PAGINATIONUPDATE: EventEmitter<any>;
    S_PAGINATIONHIDE: EventEmitter<any>;
    S_PAGINATIONSHOW: EventEmitter<any>;
    S_TAP: EventEmitter<any>;
    S_CLICK: EventEmitter<any>;
    S_DOUBLETAP: EventEmitter<any>;
    S_TOUCHEND: EventEmitter<any>;
    S_TOUCHMOVE: EventEmitter<any>;
    S_TOUCHSTART: EventEmitter<any>;
    S_TOUCHMOVEOPPOSITE: EventEmitter<any>;
    S_TRANSITIONEND: EventEmitter<any>;
    S_TRANSITIONSTART: EventEmitter<any>;
    S_SLIDEPREVTRANSITIONEND: EventEmitter<any>;
    S_SLIDEPREVTRANSITIONSTART: EventEmitter<any>;
    S_SLIDENEXTTRANSITIONEND: EventEmitter<any>;
    S_SLIDENEXTTRANSITIONSTART: EventEmitter<any>;
    S_SLIDECHANGETRANSITIONEND: EventEmitter<any>;
    S_SLIDECHANGETRANSITIONSTART: EventEmitter<any>;
    constructor(platformId: Object, zone: NgZone, elementRef: ElementRef, differs: KeyValueDiffers, defaults: SwiperConfigInterface);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private emit;
    swiper(): any;
    init(): void;
    update(): void;
    getIndex(real?: boolean): number;
    setIndex(index: number, speed?: number, silent?: boolean): void;
    prevSlide(speed?: number, silent?: boolean): void;
    nextSlide(speed?: number, silent?: boolean): void;
    stopAutoplay(reset?: boolean): void;
    startAutoplay(reset?: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SwiperDirective, [null, null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SwiperDirective, "[swiper]", ["ngxSwiper"], { "disabled": "disabled"; "performance": "performance"; "index": "index"; "config": "swiper"; }, { "indexChange": "indexChange"; "S_INIT": "init"; "S_BEFOREDESTROY": "beforeDestroy"; "S_SCROLL": "scroll"; "S_PROGRESS": "progress"; "S_KEYPRESS": "keyPress"; "S_RESIZE": "resize"; "S_BREAKPOINT": "breakpoint"; "S_ZOOMCHANGE": "zoomChange"; "S_AFTERRESIZE": "afterResize"; "S_BEFORERESIZE": "beforeResize"; "S_LOOPFIX": "loopFix"; "S_BEFORELOOPFIX": "beforeLoopFix"; "S_SLIDERMOVE": "sliderMove"; "S_SLIDECHANGE": "slideChange"; "S_SETTRANSLATE": "setTranslate"; "S_SETTRANSITION": "setTransition"; "S_FROMEDGE": "fromEdge"; "S_REACHEND": "reachEnd"; "S_REACHBEGINNING": "reachBeginning"; "S_AUTOPLAY": "autoplay"; "S_AUTOPLAYSTART": "autoplayStart"; "S_AUTOPLAYSTOP": "autoplayStop"; "S_IMAGESREADY": "imagesReady"; "S_LAZYIMAGELOAD": "lazyImageLoad"; "S_LAZYIMAGEREADY": "lazyImageReady"; "S_SCROLLDRAGEND": "scrollDragEnd"; "S_SCROLLDRAGMOVE": "scrollDragMove"; "S_SCROLLDRAGSTART": "scrollDragStart"; "S_NAVIGATIONHIDE": "navigationHide"; "S_NAVIGATIONSHOW": "navigationShow"; "S_PAGINATIONRENDER": "paginationRender"; "S_PAGINATIONUPDATE": "paginationUpdate"; "S_PAGINATIONHIDE": "paginationHide"; "S_PAGINATIONSHOW": "paginationShow"; "S_TAP": "swiperTap"; "S_CLICK": "swiperClick"; "S_DOUBLETAP": "swiperDoubleTap"; "S_TOUCHEND": "swiperTouchEnd"; "S_TOUCHMOVE": "swiperTouchMove"; "S_TOUCHSTART": "swiperTouchStart"; "S_TOUCHMOVEOPPOSITE": "swiperTouchMoveOpposite"; "S_TRANSITIONEND": "swiperTransitionEnd"; "S_TRANSITIONSTART": "swiperTransitionStart"; "S_SLIDEPREVTRANSITIONEND": "slidePrevTransitionEnd"; "S_SLIDEPREVTRANSITIONSTART": "slidePrevTransitionStart"; "S_SLIDENEXTTRANSITIONEND": "slideNextTransitionEnd"; "S_SLIDENEXTTRANSITIONSTART": "slideNextTransitionStart"; "S_SLIDECHANGETRANSITIONEND": "slideChangeTransitionEnd"; "S_SLIDECHANGETRANSITIONSTART": "slideChangeTransitionStart"; }, never>;
}

//# sourceMappingURL=swiper.directive.d.ts.map